from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from Services.Shared.OperationsService import OperationsService
from Models.Message import Message
from config.bot_init import bot, inject

class BossMessageService(object):

    _instance = None

    def __new__(cls, *args, **kwargs):
        if cls._instance is None:
            cls._instance = super().__new__(cls)
        return cls._instance
    
    def __init__(self, chatId):
        self.chatId = chatId
        self.messageRepository = inject._messageRepository
    
    spawnPhrases = [
        '–ë–æ—Å—Å –∑–∞—Å–ø–∞–≤–Ω–µ–Ω',
        '–Ø –≤—ã–∑–≤–∞–ª –±–æ—Å—Å–∞, —á—É–≤–∞–∫–∏'
    ]

    killPhrases = [
        '–ß–º–æ—à–Ω—ã–π —Ä–∞–∑–≤–∞–ª–∏–ª—Å—è, –ª—É—Ç –≤ —Å–ª–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö (—Å–æ—Å–∏—Ç–µ)',
        '–ù—É –≤—ã –∫—Ä—É—Ç—ã–µ, –º—É–∂–∏–∫–∏, –æ–Ω –≤—Å—ë. –ª—É—Ç –≤ —Å–ª–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö (—Å–æ—Å–∏—Ç–µ)'
    ]

    bossCard =  "üêâ **–ë–æ—Å—Å: {name}**\n" \
                "‚ù§Ô∏è HP: {hp} / {maxhp}\n\n" \
                "üìä –£—Ä–æ–≤–µ–Ω—å:  {level}\n" \
                "üíé –†–µ–¥–∫–æ—Å—Ç—å: {rarity}"
    
    battleReport =  " üõ†Ô∏è –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
                    "üìù **–û—Ç—á–µ—Ç –æ –±–æ–µ**\n" \
                    "üêâ –ë–æ—Å—Å: {name}\n\n" \
                    "üí• –£—Ä–æ–Ω:\n"

    def logSpawn(self):
        response = OperationsService.GetShuffledAnswer(self.spawnPhrases)
        bot.send_message(self.chatId, response)

        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        hit_button = KeyboardButton("‚öî –£–¥–∞—Ä–∏—Ç—å")
        markup.add(hit_button)
        messageId = bot.send_message(self.chatId, "–ú–µ–Ω—é –∞—Ç–∞–∫ –ø–æ–ª—É—á–µ–Ω–æ", reply_markup=markup).id

        message = Message(messageId, None)
        self.messageRepository.create(message)


    def SendBossCard(self, bossInfoDto):
        response = self.bossCard.format(name=bossInfoDto.name,
                                        level=bossInfoDto.level,
                                        hp=bossInfoDto.hp,
                                        maxhp=bossInfoDto.maxhp,
                                        rarity=bossInfoDto.rarity)
        
        messageId = bot.send_message(self.chatId, response, parse_mode="Markdown").id
        bot.pin_chat_message(self.chatId, message_id=messageId)

        message = Message(messageId, response, isBossCard=True)
        self.messageRepository.create(message)


    def LogKill(self, bossName, UsersDamageDto):
        responseKill = OperationsService.GetShuffledAnswer(self.killPhrases)
        responseReport = self.battleReport.format(name=bossName)
        for user in UsersDamageDto:
            line = f"{user.userName}: {user.hitpoints}\n"
            responseReport += line
        responseReport += "\n–û–ø—ã—Ç –ø–æ–ª—É—á–∞—é—Ç –≤—Å–µ, –∫—Ç–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª"

        messageId = bot.send_message(self.chatId, responseKill, reply_markup=ReplyKeyboardRemove()).id
        bot.send_message(self.chatId, responseReport, parse_mode="Markdown")

        message = Message(messageId, None)
        self.messageRepository.create(message)


    def RemoveBossCard(self):
        message = self.messageRepository.getBossCard()
        if (message == None):
            return
        else:
            bot.delete_message(self.chatId, message.id)
            self.messageRepository.delete(message.id)
            return